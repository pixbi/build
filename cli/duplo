#!/usr/bin/env bash

dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

# Only makes sense for the top level to define CWD
if [ "$1" != "buildDep" ] && [ "$CWD" ]; then
  cwd="$( cd "$CWD" && pwd )"
else
  cwd="$(pwd)"
fi

duploGlobal="$dir/../lib/node_modules/duplo"
if [ -d "$duploGlobal" ]; then
  duplo="$( cd $duploGlobal && pwd )"
else
  duplo="$( cd "$dir/.." && pwd )"
fi

grunt="$duplo/node_modules/grunt-cli/bin/grunt"
gruntfile="$duplo/cli/Gruntfile.coffee"
run="$grunt --base $duplo --gruntfile $gruntfile"

case "$1" in
  version)
    node "$duplo/cli/version.js"
    ;;

  new)
    name="$2"
    repo="$3"

    if [ -z "$name" ]; then
      echo "There must be a name."
      exit
    fi
    if [ -z "$repo" ]; then
      echo "There must be a Git repo URL."
      exit
    fi

    # Make sure it's a Git repo
    git init
    # Main modules directory structure
    mkdir -p "$cwd/app/modules"
    # Asset directory
    mkdir -p "$cwd/app/assets"
    # Stylus directory
    mkdir -p "$cwd/app/styl"
    # Dev directory
    mkdir -p "$cwd/dev"
    # Component.IO
    echo '{"name":"'$name'","version":"0.0.0"}' > "$cwd/component.json"
    # We need a README
    echo "# $name" > "README.md"
    # Ignore files
    cat <<- EOF >> "$cwd/.gitignore"
public/
components/
tmp/
EOF
    # Initial commit
    git add .
    git commit -m "Initialized with duplo"
    # We need a develop branch
    git checkout -b develop
    # We need to set the repo
    git remote add origin $3
    # Confirm
    echo "Initialized with duplo"
    ;;

  dev)
    if [ -z "$NODE_ENV" ]; then
      NODE_ENV="dev"
    fi

    form="$2"

    CWD=$cwd NODE_ENV=$NODE_ENV BUILD_MODE=dev $run dev:root:$form
    ;;

  build)
    if [ -z "$NODE_ENV" ]; then
      NODE_ENV="prod"
    fi

    form="$2"

    CWD=$cwd NODE_ENV=$NODE_ENV BUILD_MODE=prod $run build:root:$form
    ;;

  buildDep)
    form="$2"

    CWD=$cwd NODE_ENV=$NODE_ENV BUILD_MODE=$BUILD_MODE $run build:$form
    ;;

  patch)
    CWD=$cwd $run release:patch
    ;;

  minor)
    CWD=$cwd $run release:minor
    ;;

  major)
    CWD=$cwd $run release:major
    ;;

  *)
    echo "Unknown command"
esac
